name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: |
        npm install
        npm install -g @capacitor/cli
    - name: Build web assets
      run: |
        # Ensure www directory exists with basic content
        mkdir -p www/js www/css
        if [ ! -f "www/index.html" ]; then
          cp *.html www/ 2>/dev/null || echo "<!DOCTYPE html><html><head><title>SMS App</title></head><body><div id='app'><h1>SMS Messenger</h1></div><script src='js/app.js'></script></body></html>" > www/index.html
        fi
        cp -r js/* www/js/ 2>/dev/null || echo "console.log('SMS App loaded');" > www/js/app.js
        cp -r css/* www/css/ 2>/dev/null || true
    - name: Remove existing Android platform
      run: |
        if [ -d "android" ]; then
          echo "Removing existing Android platform..."
          rm -rf android
        fi
    - name: Add Android platform
      run: |
        npx cap add android
    - name: Sync Capacitor
      run: |
        npx cap sync android
    - name: Fix capacitor-sms plugins namespace and dependencies
      run: |
        # Fix @byteowls/capacitor-sms namespace
        if [ -f "node_modules/@byteowls/capacitor-sms/android/build.gradle" ]; then
          echo "Fixing @byteowls/capacitor-sms namespace..."
          if ! grep -q "namespace" node_modules/@byteowls/capacitor-sms/android/build.gradle; then
            sed -i '/android {/a\    namespace "com.byteowls.capacitor.sms"' node_modules/@byteowls/capacitor-sms/android/build.gradle
          fi
        fi

        # Fix capacitor-sms namespace and dependencies
        if [ -f "node_modules/capacitor-sms/android/capacitor-sms/build.gradle" ]; then
          echo "Fixing capacitor-sms namespace and dependencies..."
          if ! grep -q "namespace" node_modules/capacitor-sms/android/capacitor-sms/build.gradle; then
            sed -i '/android {/a\    namespace "com.adrbrpa.sms.plugin.capacitorsms"' node_modules/capacitor-sms/android/capacitor-sms/build.gradle
          fi
          # Fix Capacitor dependency to use local project instead of maven
          sed -i 's/ionic-team:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/capacitor-sms/build.gradle
          sed -i 's/com\.capacitorjs:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/capacitor-sms/build.gradle
          sed -i 's/implementation '\''ionic-team:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/capacitor-sms/build.gradle
          sed -i 's/implementation '\''com\.capacitorjs:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/capacitor-sms/build.gradle

          # Fix AndroidManifest.xml - remove package attribute
          if [ -f "node_modules/capacitor-sms/android/capacitor-sms/src/main/AndroidManifest.xml" ]; then
            echo "Removing package attribute from AndroidManifest.xml..."
            sed -i 's/package="[^"]*"//g' node_modules/capacitor-sms/android/capacitor-sms/src/main/AndroidManifest.xml
          fi

          # Fix Java source code compatibility issues
          echo "Fixing Java source code compatibility..."
          # Fix support library imports to AndroidX
          find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\.v4\.app\./import androidx.core.app./g' {} \;
          find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\.v4\.content\./import androidx.core.content./g' {} \;
          find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\./import androidx./g' {} \;

          # Fix Capacitor API calls
          find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/call\.success(/call.resolve(/g' {} \;
          find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/call\.error(/call.reject(/g' {} \;

          # Fix Java compatibility version in build.gradle
          sed -i 's/JavaVersion\.VERSION_1_8/JavaVersion.VERSION_11/g' node_modules/capacitor-sms/android/capacitor-sms/build.gradle

          # Add AndroidX dependencies to capacitor-sms build.gradle
          echo "Adding AndroidX dependencies to capacitor-sms build.gradle..."
          if ! grep -q "androidx.core:core" node_modules/capacitor-sms/android/capacitor-sms/build.gradle; then
            # Find the last dependencies block (not in buildscript) and add AndroidX dependencies
            # Use awk to find the correct dependencies block after android block
            awk '
            /^android \{/ { in_android = 1 }
            /^dependencies \{/ && in_android {
              print $0
              print "    implementation \"androidx.core:core:1.12.0\""
              print "    implementation \"androidx.appcompat:appcompat:1.6.1\""
              next
            }
            { print }
            ' node_modules/capacitor-sms/android/capacitor-sms/build.gradle > temp_build.gradle && mv temp_build.gradle node_modules/capacitor-sms/android/capacitor-sms/build.gradle

            # If no dependencies block found after android block, add it at the end
            if ! grep -q "androidx.core:core" node_modules/capacitor-sms/android/capacitor-sms/build.gradle; then
              echo -e "\ndependencies {\n    implementation \"androidx.core:core:1.12.0\"\n    implementation \"androidx.appcompat:appcompat:1.6.1\"\n}" >> node_modules/capacitor-sms/android/capacitor-sms/build.gradle
            fi
            echo "AndroidX dependencies added to capacitor-sms"
          fi

          # Add compileOptions if not exists
          if ! grep -q "compileOptions" node_modules/capacitor-sms/android/capacitor-sms/build.gradle; then
            sed -i '/android {/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_11\n        targetCompatibility JavaVersion.VERSION_11\n    }' node_modules/capacitor-sms/android/capacitor-sms/build.gradle
          fi
        fi

        # Also check alternative path structure
        if [ -f "node_modules/capacitor-sms/android/build.gradle" ]; then
          echo "Fixing capacitor-sms namespace and dependencies (alternative path)..."
          if ! grep -q "namespace" node_modules/capacitor-sms/android/build.gradle; then
            sed -i '/android {/a\    namespace "com.adrbrpa.sms.plugin.capacitorsms"' node_modules/capacitor-sms/android/build.gradle
          fi
          # Fix Capacitor dependency to use local project instead of maven
          sed -i 's/ionic-team:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/build.gradle
          sed -i 's/com\.capacitorjs:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/build.gradle
          sed -i 's/implementation '\''ionic-team:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/build.gradle
          sed -i 's/implementation '\''com\.capacitorjs:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' node_modules/capacitor-sms/android/build.gradle

          # Fix AndroidManifest.xml - alternative path
          if [ -f "node_modules/capacitor-sms/android/src/main/AndroidManifest.xml" ]; then
            echo "Removing package attribute from AndroidManifest.xml (alternative path)..."
            sed -i 's/package="[^"]*"//g' node_modules/capacitor-sms/android/src/main/AndroidManifest.xml
          fi

          # Fix Java compatibility version in alternative path
          sed -i 's/JavaVersion\.VERSION_1_8/JavaVersion.VERSION_11/g' node_modules/capacitor-sms/android/build.gradle

          # Add AndroidX dependencies to alternative path build.gradle
          echo "Adding AndroidX dependencies to alternative path build.gradle..."
          if ! grep -q "androidx.core:core" node_modules/capacitor-sms/android/build.gradle; then
            # Find the last dependencies block (not in buildscript) and add AndroidX dependencies
            # Use awk to find the correct dependencies block after android block
            awk '
            /^android \{/ { in_android = 1 }
            /^dependencies \{/ && in_android {
              print $0
              print "    implementation \"androidx.core:core:1.12.0\""
              print "    implementation \"androidx.appcompat:appcompat:1.6.1\""
              next
            }
            { print }
            ' node_modules/capacitor-sms/android/build.gradle > temp_build.gradle && mv temp_build.gradle node_modules/capacitor-sms/android/build.gradle

            # If no dependencies block found after android block, add it at the end
            if ! grep -q "androidx.core:core" node_modules/capacitor-sms/android/build.gradle; then
              echo -e "\ndependencies {\n    implementation \"androidx.core:core:1.12.0\"\n    implementation \"androidx.appcompat:appcompat:1.6.1\"\n}" >> node_modules/capacitor-sms/android/build.gradle
            fi
            echo "AndroidX dependencies added to alternative path"
          fi

          # Add compileOptions if not exists in alternative path
          if ! grep -q "compileOptions" node_modules/capacitor-sms/android/build.gradle; then
            sed -i '/android {/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_11\n        targetCompatibility JavaVersion.VERSION_11\n    }' node_modules/capacitor-sms/android/build.gradle
          fi
        fi

        # Check if there are any other build.gradle files in capacitor-sms
        find node_modules/capacitor-sms -name "build.gradle" -exec echo "Found build.gradle: {}" \;
        find node_modules/capacitor-sms -name "build.gradle" -exec sed -i 's/ionic-team:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' {} \;
        find node_modules/capacitor-sms -name "build.gradle" -exec sed -i 's/com\.capacitorjs:capacitor-android:[^"'\'']*[+\]\*]/project('\'':capacitor-android'\'')/g' {} \;
        find node_modules/capacitor-sms -name "build.gradle" -exec sed -i 's/implementation '\''ionic-team:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' {} \;
        find node_modules/capacitor-sms -name "build.gradle" -exec sed -i 's/implementation '\''com\.capacitorjs:capacitor-android:[^'\'']*'\''/implementation project('\'':capacitor-android'\'')/g' {} \;

        # Fix all AndroidManifest.xml files in capacitor-sms
        find node_modules/capacitor-sms -name "AndroidManifest.xml" -exec echo "Found AndroidManifest.xml: {}" \;
        find node_modules/capacitor-sms -name "AndroidManifest.xml" -exec sed -i 's/package="[^"]*"//g' {} \;

        # Fix all Java source files for AndroidX and Capacitor 5 compatibility
        echo "Applying global Java source fixes..."
        find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\.v4\.app\./import androidx.core.app./g' {} \;
        find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\.v4\.content\./import androidx.core.content./g' {} \;
        find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/import android\.support\./import androidx./g' {} \;
        find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/call\.success(/call.resolve(/g' {} \;
        find node_modules/capacitor-sms -name "*.java" -exec sed -i 's/call\.error(/call.reject(/g' {} \;

        # Fix all build.gradle files for Java 11 compatibility
        find node_modules/capacitor-sms -name "build.gradle" -exec sed -i 's/JavaVersion\.VERSION_1_8/JavaVersion.VERSION_11/g' {} \;
    - name: Add AndroidX dependencies to app build.gradle
      run: |
        echo "Adding AndroidX dependencies to android/app/build.gradle..."
        if [ -f "android/app/build.gradle" ]; then
          # Check if AndroidX dependencies already exist
          if ! grep -q "androidx.core:core" android/app/build.gradle; then
            # Find the dependencies block and add AndroidX dependencies
            sed -i '/dependencies {/a\    implementation "androidx.core:core:1.12.0"\n    implementation "androidx.appcompat:appcompat:1.6.1"' android/app/build.gradle
            echo "AndroidX dependencies added to app/build.gradle"
          else
            echo "AndroidX dependencies already exist in app/build.gradle"
          fi
        else
          echo "android/app/build.gradle not found"
        fi
    - name: Add gradle.properties for JDK 21 compatibility
      run: |
        echo "Adding JDK 21 compatibility settings to gradle.properties..."
        if [ -f "android/gradle.properties" ]; then
          if ! grep -q "android.javaCompile.suppressSourceTargetDeprecationWarning" android/gradle.properties; then
            echo "android.javaCompile.suppressSourceTargetDeprecationWarning=true" >> android/gradle.properties
            echo "JDK 21 compatibility setting added"
          fi
        else
          echo "android.javaCompile.suppressSourceTargetDeprecationWarning=true" > android/gradle.properties
          echo "Created gradle.properties with JDK 21 compatibility"
        fi
    - name: Verify Android structure
      run: |
        echo "Android directory structure:"
        ls -la android/
        echo "App module check:"
        ls -la android/app/ || echo "App module not found!"
        echo "Settings gradle content:"
        cat android/settings.gradle || echo "Settings gradle not found!"
    - name: Build APK
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug --no-daemon --stacktrace
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk